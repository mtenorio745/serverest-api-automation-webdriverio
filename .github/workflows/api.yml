name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  Testes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configurar Relatório Allure
        run: |
          mkdir -p allure-results
          echo '{
            "name": "GitHub Actions",
            "type": "github",
            "url": "https://mtenorio745.github.io/serverest-api-automation-webdriverio/#",
            "buildUrl": "'"${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"'",
            "reportName": "Relatório de Testes API",
            "buildName": "Workflow Build",
            "reportUrl": "https://mtenorio745.github.io/serverest-api-automation-webdriverio/#"
          }' > allure-results/executor.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 

      - name: Install dependencies
        run: npm install

      - name: Ensure wdio executable permissions
        run: chmod +x node_modules/.bin/wdio

      - name: Ensure allure executable permissions
        run: |
          chmod +x node_modules/.bin/allure
          chmod +x node_modules/allure-commandline/dist/bin/allure
        
      - name: Run WebdriverIO tests
        run: npx wdio run ./wdio.conf.js
        env:
            API_URL: 'https://serverest.dev'

      - name: Gerar relatório Allure
        if: always()
        run: |
          npm install -g allure-commandline
          npx allure generate allure-results --clean -o allure-report
          
      - name: Publicar no GitHub Pages
        if: always()
        uses: actions/upload-pages-artifact@v4
        with:
          path: './allure-report'
      - id: deployment
        uses: actions/deploy-pages@v4